DATA CLEANING:

import pandas as pd
df = pd.read_csv('Maternal Health Risk Data Set 2.csv')
print("Original dataset:")
print(df.head())
df.dropna(inplace=True)
#df.fillna("nill",inplace=True)
df.drop_duplicates(inplace=True)
df.to_csv('cleaned_dataset.csv')
print("\nCleaned dataset:")
print(df.head())
# print("\nfull dataset")
# print(df)


DATA NORMALISATION:

import pandas as pd
from sklearn.preprocessing import MinMaxScaler

# Read the dataset
df = pd.read_csv('Maternal Health Risk Data Set.csv')

# Drop rows with missing values
df.dropna(inplace=True)

# Drop duplicate rows
df.drop_duplicates(inplace=True)

# Drop non-numeric columns
df_numeric = df.select_dtypes(include='number')

# Perform data normalization
scaler = MinMaxScaler()
normalized_data = scaler.fit_transform(df_numeric)

# Convert the normalized array back to a DataFrame
df_normalized = pd.DataFrame(normalized_data, columns=df_numeric.columns)

# Save the normalized dataset
df_normalized.to_csv('normalized_dataset.csv', index=False)

print("\nNormalized dataset:")
print(df_normalized.head())


LINEAR REGRESSION:

import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Read the dataset
df = pd.read_csv('cleaned_dataset.csv')

# Specify the target column name
target_column = 'BodyTemp'  # Replace 'actual_target_column_name' with the correct column name

# Splitting the dataset into features (X) and target variable (y)
X = df.drop(columns=[target_column])
y = df[target_column]

# Splitting the dataset into train and test sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit the linear regression model
reg = LinearRegression()
reg.fit(X_train, y_train)

# Plotting the regression line
plt.scatter(X_train, y_train, color='red')
plt.plot(X_train, reg.predict(X_train), color='green')
plt.title("LINEAR REGRESSION")
plt.xlabel("X_train")
plt.ylabel("y_train")
plt.show()



import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
dataset=pd.read_csv('cleaned_dataset.csv')
dataset.head()
#defining x amd y
X=dataset.iloc[:,:-1].values
y=dataset.iloc[:,1].values
#split into td and td
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)
X_train,X_test,y_train,y_test
#import lilb for regression
from sklearn.linear_model import LinearRegression
#make function for LR
reg=LinearRegression()
#fit model with split dataset
reg.fit(X_train,y_train)
y_predict=reg.predict(X_test)
y_predict
plt.scatter(X_train,y_train,color='red')
plt.plot(X_train,reg.predict(X_train),color='green')
plt.title("LINEAR REGRESSION")
plt.show()
